#!/usr/bin/php
<?php

// because it's all still in ALPHA :-)
error_reporting(E_ALL);

// use composer for auto-loading
require __DIR__.'/../vendor/autoload.php';

// get process and debug server
// $process = Core\Process::get();
$debugger = Debug\Debugger::get();
$server = $debugger->getServer();

// add process event handler
// $process->on('shutdown', function () use ($server) {
//     $server->send('shutdown server');
//     $server->close();
// });

// stats
$lastTime = float_microtime();
$num = 1;
$contextTimeOut = 3;

// ui message
echo 'Listening for debug messages...' . PHP_EOL;

do {
    if ($packet = $server->receive()) {

        // calculate duration since last debug message
        $msDuration = number_format(float_microtime() - $lastTime, 6);

        if ($contextTimeOut < $msDuration) {
            echo str_cli_color('----------------', 'white') . PHP_EOL;
        }

        $packet = explode(':', $packet);
        $domain = array_shift($packet);
        $color = array_shift($packet);
        $message = implode(':', $packet);

        // indent
        // echo '  ';

        // debug domain
        echo str_cli_color($domain, $color);
        echo ' ';

        // duration
        echo str_cli_color('+' . $msDuration . 's', $color);
        echo ' ';

        // message
        echo str_cli_color($message, 'light_gray');
        echo ' ';
        echo '';

        echo PHP_EOL;

        // store last time
        $lastTime = float_microtime();
    }
}

while ($packet);
